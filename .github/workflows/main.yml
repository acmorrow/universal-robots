name: Universal Robots CI Pipeline

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
    branches: ['main']
  push:
    branches:
      - '**'
  release:
    types: [published]

jobs:
  main:
    name: Main CI
    runs-on: ${{ matrix.runner }}
    container: ghcr.io/viam-modules/universal-robots:${{ matrix.arch }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - arch: amd64
          runner: ubuntu-latest
        - arch: arm64
          runner: ubuntu-4cpu-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      - name: Configure
        run: make configure
      - name: Format
        run: make format-check
      - name: Check Check
        run: make run-clang-check
      - name: Check Tidy
        run: make run-clang-tidy
      - name: Build
        run: make build
      - name: Test
        run: make test

  publish:
    name: Publish ${{ matrix.platform }}
    needs: [main]
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          # Linux builds in Debian Bookworm container
          - platform: linux/amd64
            runner: ubuntu-latest
            container: debian:bookworm
            setup_type: debian
            artifact_name: module-linux-amd64
          - platform: linux/arm64
            runner: ubuntu-4cpu-arm
            container: debian:bookworm
            setup_type: debian
            artifact_name: module-linux-arm64
          # macOS native build
          - platform: darwin/arm64
            runner: macos-14
            setup_type: macos
            artifact_name: module-darwin-arm64

    # Container is only populated for Linux builds
    container: ${{ matrix.container }}

    steps:
      # Debian/Ubuntu setup: Install system dependencies
      - name: Install system dependencies (Debian)
        if: matrix.setup_type == 'debian'
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            build-essential \
            ca-certificates \
            cmake \
            curl \
            g++ \
            git \
            jq \
            ninja-build \
            pkg-config \
            python3 \
            python3-pip \
            sudo \
            wget

      # Debian/Ubuntu setup: Install Conan via pip (not using conan-io/setup-conan for container compatibility)
      - name: Install Conan (Debian)
        if: matrix.setup_type == 'debian'
        run: |
          python3 -m pip install --break-system-packages conan
          conan profile detect

      # macOS setup: Install Conan via Homebrew
      - name: Install Conan (macOS)
        if: matrix.setup_type == 'macos'
        run: |
          brew install conan jq
          conan profile detect

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      # Build using setup.sh and build.sh scripts
      - name: Setup C++ SDK
        run: ./bin/setup.sh

      - name: Build module
        run: ./bin/build.sh

      # Attach module.tar.gz to workflow run
      - name: Attach build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: module.tar.gz
          retention-days: 7
          if-no-files-found: error

      # Upload to Viam
      - name: Upload module to Viam
        uses: viamrobotics/upload-module@v1
        with:
          module-path: module.tar.gz
          platform: ${{ matrix.platform }}
          version: ${{ github.ref_name }}
          key-id: ${{ secrets.viam_key_id }}
          key-value: ${{ secrets.viam_key_value }}
          do-update: ${{ github.event_name == 'release' && !github.event.release.prerelease }}
          do-upload: ${{ github.event_name == 'release' }}
